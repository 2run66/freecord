services:
  postgres:
    image: postgres:15-alpine
    container_name: freecord-dev-postgres
    environment:
      POSTGRES_DB: freecord_dev
      POSTGRES_USER: freecord_user
      POSTGRES_PASSWORD: freecord_password
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U freecord_user -d freecord_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - freecord-dev-network

  redis:
    image: redis:7-alpine
    container_name: freecord-dev-redis
    volumes:
      - dev_redis_data:/data
    ports:
      - "26379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - freecord-dev-network


  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${DEV_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-pk_test_dev_placeholder}
        NEXT_PUBLIC_CLERK_SIGN_IN_URL: /sign-in
        NEXT_PUBLIC_CLERK_SIGN_UP_URL: /sign-up
        NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: /
        NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: /
        NEXT_PUBLIC_LIVEKIT_URL: ${DEV_NEXT_PUBLIC_LIVEKIT_URL:-wss://freecord-b1rt90r2.livekit.cloud}
    container_name: freecord-dev-app
    env_file:
      - .env.dev
    environment:
      DATABASE_URL: ${DEV_DATABASE_URL:-postgresql://freecord_user:freecord_password@postgres:5432/freecord_dev}
      NODE_ENV: production
      PORT: 3001
      HOSTNAME: 0.0.0.0

      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${DEV_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${DEV_CLERK_SECRET_KEY}
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: /sign-in
      NEXT_PUBLIC_CLERK_SIGN_UP_URL: /sign-up
      NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: /
      NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: /

      LIVEKIT_API_KEY: ${DEV_LIVEKIT_API_KEY}
      LIVEKIT_API_SECRET: ${DEV_LIVEKIT_API_SECRET}
      NEXT_PUBLIC_LIVEKIT_URL: ${DEV_NEXT_PUBLIC_LIVEKIT_URL:-wss://freecord-b1rt90r2.livekit.cloud}
      LIVEKIT_SERVER_URL: ${DEV_LIVEKIT_SERVER_URL:-https://freecord-b1rt90r2.livekit.cloud}

      REDIS_URL: ${DEV_REDIS_URL:-redis://redis:6379}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - freecord-dev-network
    volumes:
      - dev_uploads_data:/app/uploads

volumes:
  dev_postgres_data:
    driver: local
  dev_redis_data:
    driver: local
  dev_uploads_data:
    driver: local

networks:
  freecord-dev-network:
    driver: bridge


